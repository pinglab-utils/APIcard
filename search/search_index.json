{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"API Card Welcome to API card collection! Application Programming Interfaces (APIs) are software intermediaries that enable two applications to communicate. Many biomedical knowledge bases and software tools support API access. We have compiled all API cards collected by students in BioInfo 201-Winter, 2022, UCLA class, conducted by Pinglab UCLA , as their class project into a unified document. The goal of this project is to: Learn which APIs are available for biomedical knowledge, software tools, or datasets, and how they can be accessed. Describe how these APIs can be leveraged for omics-related data analysis workflows. Each API card document is prepared by a group of students which includes: Title Description Use Cases Tutorials A Sample API Card Following is a sample API card prepared by instructors on Uniprot API. We encourage students to follow the similar pattern and add more information (e.g., cheat sheet, citations, supporting papers) if needed and available. Title: UniProt Web API Description: UniProt is a protein knowledge base which provides information on proteins, including their sequences, their biological function, and other properties, curated from their references in the biomedical literature. UniProt can be accessed directly at uniprot.org and instructions to the API are detailed at online API document . Use cases: Retrieve individual or batch entries of proteins of interest (e.g., the text representation of a protein entry, parsable by a custom script, given at a text file Convert database identifiers (e.g., If a collaborator gave you protein IDs from another knowledgebase such as STRING DB but your software uses UniProt IDs. You want your software to convert these to UniProt so you can run your analysis properly. You can use UniProt\u2019s web API described here to convert these IDs.) Tutorial: We encourage students to create a Google Colab jupyter notebook as a tutorial with necessary code to illustrate the use of API with some tasks. Here we provide a smaple tutorial for Uniprot API. Tutorial on Uniprot API in Google Colab is available here Brought to you by Ping Lab Utils (GitHub), UCLA, 2022","title":"Home"},{"location":"#api-card","text":"Welcome to API card collection! Application Programming Interfaces (APIs) are software intermediaries that enable two applications to communicate. Many biomedical knowledge bases and software tools support API access. We have compiled all API cards collected by students in BioInfo 201-Winter, 2022, UCLA class, conducted by Pinglab UCLA , as their class project into a unified document. The goal of this project is to: Learn which APIs are available for biomedical knowledge, software tools, or datasets, and how they can be accessed. Describe how these APIs can be leveraged for omics-related data analysis workflows. Each API card document is prepared by a group of students which includes: Title Description Use Cases Tutorials","title":"API Card"},{"location":"#a-sample-api-card","text":"Following is a sample API card prepared by instructors on Uniprot API. We encourage students to follow the similar pattern and add more information (e.g., cheat sheet, citations, supporting papers) if needed and available.","title":"A Sample API Card"},{"location":"#title-uniprot-web-api","text":"","title":"Title: UniProt Web API"},{"location":"#description","text":"UniProt is a protein knowledge base which provides information on proteins, including their sequences, their biological function, and other properties, curated from their references in the biomedical literature. UniProt can be accessed directly at uniprot.org and instructions to the API are detailed at online API document .","title":"Description:"},{"location":"#use-cases","text":"Retrieve individual or batch entries of proteins of interest (e.g., the text representation of a protein entry, parsable by a custom script, given at a text file Convert database identifiers (e.g., If a collaborator gave you protein IDs from another knowledgebase such as STRING DB but your software uses UniProt IDs. You want your software to convert these to UniProt so you can run your analysis properly. You can use UniProt\u2019s web API described here to convert these IDs.)","title":"Use cases:"},{"location":"#tutorial","text":"We encourage students to create a Google Colab jupyter notebook as a tutorial with necessary code to illustrate the use of API with some tasks. Here we provide a smaple tutorial for Uniprot API. Tutorial on Uniprot API in Google Colab is available here Brought to you by Ping Lab Utils (GitHub), UCLA, 2022","title":"Tutorial:"},{"location":"cbio-portal/","text":"cBioPortal Explored by: FLORES, MARIA V , HAMILTON, TIMOTHY , MAH, JONATHAN CHARLES - (Bioinfo 201 - Winter 2022) Description: The cBioportal for Cancer Genomics is an open-access, open-source resource for interactive exploration and visualization of multidimensional cancer genomics data sets. cBioPortal can be accessed directly at cbioportal.org . Instructions to cBioportal can be found at this link . Use Cases: Retrieve microarray data to determine cancer mutations across multiple patients and studies Utilize data for for own local visualizations Cross reference different mutations to determine common genotypes Use mutations in Conjunction with Clinical Data to predict Disease Outcomes Tutorial: Tutorial for cBioPortal in Google Colab is available here","title":"cBio Portal"},{"location":"cbio-portal/#cbioportal","text":"","title":"cBioPortal"},{"location":"cbio-portal/#explored-by","text":"FLORES, MARIA V , HAMILTON, TIMOTHY , MAH, JONATHAN CHARLES - (Bioinfo 201 - Winter 2022)","title":"Explored by:"},{"location":"cbio-portal/#description","text":"The cBioportal for Cancer Genomics is an open-access, open-source resource for interactive exploration and visualization of multidimensional cancer genomics data sets. cBioPortal can be accessed directly at cbioportal.org . Instructions to cBioportal can be found at this link .","title":"Description:"},{"location":"cbio-portal/#use-cases","text":"Retrieve microarray data to determine cancer mutations across multiple patients and studies Utilize data for for own local visualizations Cross reference different mutations to determine common genotypes Use mutations in Conjunction with Clinical Data to predict Disease Outcomes","title":"Use Cases:"},{"location":"cbio-portal/#tutorial","text":"Tutorial for cBioPortal in Google Colab is available here","title":"Tutorial:"},{"location":"ensembl-rest-api/","text":"Ensembl API Explored by: DARCI-MAHER, NICHOLAS WAXTER , RAZMA, CONNOR JOHN - (Bioinfo 201 - Winter 2022) Description Ensembl is a genome browser that returns an Ensembl ID as part of its annotation program. The Ensembl Rest API provides many additional functions that supplement this genome browser detailed in the use cases below. The Ensembl Rest API accesses the software for each of these use cases that was developed by the software team at Ensembl. Ensembl can be accessed directly at uswest.ensembl.org . Instructions for the software are detailed REST API document available here . Use cases Input an Ensembl identifier for a genetic feature, and retrieve the Ensembl version of that ID. This would be useful at the beginning of an analysis as a QC step to make sure all your IDs were from the same version. Input a gene and retrieve a tree showing the ancestry of that gene across different species. Input an Ensembl ID and retrieve a list of analyses that have been done using that gene, variant, or other feature. Input a genetic variant and retrieve LD for all variants in a window around that variant. Input a gene and retrieve a list of genes, variants, and other features that overlap that gene in the genome. Input a phenotype and retrieve a list of genes, variants, and other features that are known to be associated with that phenotype. Optionally, the PubMed IDs of papers that made those associated can be added to the response. Input a genetic variant and retrieve information on its downstream consequences, including what type of variant it is, its CADD deleteriousness score, its sequence ontology, and more. Tutorial Ensemble REST API tutorial in Google Colab is available here","title":"Ensebl REST API"},{"location":"ensembl-rest-api/#ensembl-api","text":"","title":"Ensembl  API"},{"location":"ensembl-rest-api/#explored-by","text":"DARCI-MAHER, NICHOLAS WAXTER , RAZMA, CONNOR JOHN - (Bioinfo 201 - Winter 2022)","title":"Explored by:"},{"location":"ensembl-rest-api/#description","text":"Ensembl is a genome browser that returns an Ensembl ID as part of its annotation program. The Ensembl Rest API provides many additional functions that supplement this genome browser detailed in the use cases below. The Ensembl Rest API accesses the software for each of these use cases that was developed by the software team at Ensembl. Ensembl can be accessed directly at uswest.ensembl.org . Instructions for the software are detailed REST API document available here .","title":"Description"},{"location":"ensembl-rest-api/#use-cases","text":"Input an Ensembl identifier for a genetic feature, and retrieve the Ensembl version of that ID. This would be useful at the beginning of an analysis as a QC step to make sure all your IDs were from the same version. Input a gene and retrieve a tree showing the ancestry of that gene across different species. Input an Ensembl ID and retrieve a list of analyses that have been done using that gene, variant, or other feature. Input a genetic variant and retrieve LD for all variants in a window around that variant. Input a gene and retrieve a list of genes, variants, and other features that overlap that gene in the genome. Input a phenotype and retrieve a list of genes, variants, and other features that are known to be associated with that phenotype. Optionally, the PubMed IDs of papers that made those associated can be added to the response. Input a genetic variant and retrieve information on its downstream consequences, including what type of variant it is, its CADD deleteriousness score, its sequence ontology, and more.","title":"Use cases"},{"location":"ensembl-rest-api/#tutorial","text":"Ensemble REST API tutorial in Google Colab is available here","title":"Tutorial"},{"location":"gene-ontology/","text":"Gen Ontology API Explored by: HU, CHARLOTTEHU, CHARLOTTE , LAPINSKA, SANDRA , WINATA, HELENA KANYA - (Bioinfo 201 - Winter 2022) Description: The Gene Ontology develops computational models of biological systems to provide users a thorough representation of the current scientific knowledge about the protein and non-coding RNA molecules produced by genes from different organisms. It\u2019s main use is to support scientific research by answering questions like how individual genes contribute to the biology of an organism at the molecular level or if the organisms share the relevant genes because they inherited them from their common ancestor. It offers two primary resources GO itself which comprises of the logical structure describing the full complexity of the biology, and GO annotations that relate gene product to specific ontology terms to describe its normal biological role. A list of APIs can be found at API listing website . Use cases: Finding Genes associated with a GO term - We can use the database to look for genes that are associated with a biological process, mechanism, etc. This is useful to compare between known genes associated with a GO term and a putative gene of interest. Find all concept related to a particular disease or gene - We can use this API to retrieve the information of a certain disease or gene we are interested in. It will give us an empty array if it is not found. It saves us time from looking for the object we are studying. Moreover, it provides us results with synonym terms that could be used for literature search or other databases. Tutorial: A tutorial on Gene Ontology in Google Colab is available here","title":"Gene Ontology"},{"location":"gene-ontology/#gen-ontology-api","text":"","title":"Gen Ontology API"},{"location":"gene-ontology/#explored-by","text":"HU, CHARLOTTEHU, CHARLOTTE , LAPINSKA, SANDRA , WINATA, HELENA KANYA - (Bioinfo 201 - Winter 2022)","title":"Explored by:"},{"location":"gene-ontology/#description","text":"The Gene Ontology develops computational models of biological systems to provide users a thorough representation of the current scientific knowledge about the protein and non-coding RNA molecules produced by genes from different organisms. It\u2019s main use is to support scientific research by answering questions like how individual genes contribute to the biology of an organism at the molecular level or if the organisms share the relevant genes because they inherited them from their common ancestor. It offers two primary resources GO itself which comprises of the logical structure describing the full complexity of the biology, and GO annotations that relate gene product to specific ontology terms to describe its normal biological role. A list of APIs can be found at API listing website .","title":"Description:"},{"location":"gene-ontology/#use-cases","text":"Finding Genes associated with a GO term - We can use the database to look for genes that are associated with a biological process, mechanism, etc. This is useful to compare between known genes associated with a GO term and a putative gene of interest. Find all concept related to a particular disease or gene - We can use this API to retrieve the information of a certain disease or gene we are interested in. It will give us an empty array if it is not found. It saves us time from looking for the object we are studying. Moreover, it provides us results with synonym terms that could be used for literature search or other databases.","title":"Use cases:"},{"location":"gene-ontology/#tutorial","text":"A tutorial on Gene Ontology in Google Colab is available here","title":"Tutorial:"},{"location":"gwasrappid-catalog/","text":"gwasrapidd/GWAS catalog API Explored by: PIMPLASKAR, ADITYA , LI, TERENCE WENTAO , KIM, SANDY SUNG - (Bioinfo 201 - Winter 2022) Description: The GWAS catalog was initiated by the National Human Genome Resource Institute to enable access to published GWA studies. These studies are identified by literature search by curators, who then extract trait information with relevant SNPs and metadata. Summary statistics and other various analyses are also made available. The GWAS catalog has its own REST API but returns data in a hierarchical JSON format. Gwasrapidd is an R package that provides the first client interface to the GWAS Catalog REST API, allowing users to bypass this JSON format to get data in a more tabular fashion. It enables users to quickly retrieve, filter and integrate data with comprehensive bioinformatics analysis tools, which is particularly critical for those looking into functional characterization of risk loci. Tutorial from developer is available here Cheat sheet from developer is available here Use cases: Query GWAS database using a variety of criteria: Study access identifier for a particular GWAS Risk allele ID (RSID) for a particular allele Broader experimental factor ontology (EFO) traits Based on existing queries, identify related traits and associations Set operations to manage and filter queries Our tutorial: Tutorial for Gwas Rappid Catalog in Google Colab is available here Find the Slides here Citations: Buniello A, MacArthur JAL, Cerezo M, Harris LW, Hayhurst J, Malangone C, McMahon A, Morales J, Mountjoy E, Sollis E, Suveges D, Vrousgou O, Whetzel PL, Amode R, Guillen JA, Riat HS, Trevanion SJ, Hall P, Junkins H, Flicek P, Burdett T, Hindorff LA, Cunningham F and Parkinson H. 6The NHGRI-EBI GWAS Catalog of published genome-wide association studies, targeted arrays and summary statistics 2019. Nucleic Acids Research, 2019, Vol. 47 (Database issue): D1005-D1012. Ramiro Magno, Ana-Teresa Maia, gwasrapidd: an R package to query, download and wrangle GWAS catalog data, Bioinformatics, Volume 36, Issue 2, 15 January 2020, Pages 649\u2013650, https://doi.org/10.1093/bioinformatics/btz605","title":"GWAS Rappid Catalog"},{"location":"gwasrappid-catalog/#gwasrapiddgwas-catalog-api","text":"","title":"gwasrapidd/GWAS catalog API"},{"location":"gwasrappid-catalog/#explored-by","text":"PIMPLASKAR, ADITYA , LI, TERENCE WENTAO , KIM, SANDY SUNG - (Bioinfo 201 - Winter 2022)","title":"Explored by:"},{"location":"gwasrappid-catalog/#description","text":"The GWAS catalog was initiated by the National Human Genome Resource Institute to enable access to published GWA studies. These studies are identified by literature search by curators, who then extract trait information with relevant SNPs and metadata. Summary statistics and other various analyses are also made available. The GWAS catalog has its own REST API but returns data in a hierarchical JSON format. Gwasrapidd is an R package that provides the first client interface to the GWAS Catalog REST API, allowing users to bypass this JSON format to get data in a more tabular fashion. It enables users to quickly retrieve, filter and integrate data with comprehensive bioinformatics analysis tools, which is particularly critical for those looking into functional characterization of risk loci. Tutorial from developer is available here Cheat sheet from developer is available here","title":"Description:"},{"location":"gwasrappid-catalog/#use-cases","text":"Query GWAS database using a variety of criteria: Study access identifier for a particular GWAS Risk allele ID (RSID) for a particular allele Broader experimental factor ontology (EFO) traits Based on existing queries, identify related traits and associations Set operations to manage and filter queries","title":"Use cases:"},{"location":"gwasrappid-catalog/#our-tutorial","text":"Tutorial for Gwas Rappid Catalog in Google Colab is available here Find the Slides here","title":"Our tutorial:"},{"location":"gwasrappid-catalog/#citations","text":"Buniello A, MacArthur JAL, Cerezo M, Harris LW, Hayhurst J, Malangone C, McMahon A, Morales J, Mountjoy E, Sollis E, Suveges D, Vrousgou O, Whetzel PL, Amode R, Guillen JA, Riat HS, Trevanion SJ, Hall P, Junkins H, Flicek P, Burdett T, Hindorff LA, Cunningham F and Parkinson H. 6The NHGRI-EBI GWAS Catalog of published genome-wide association studies, targeted arrays and summary statistics 2019. Nucleic Acids Research, 2019, Vol. 47 (Database issue): D1005-D1012. Ramiro Magno, Ana-Teresa Maia, gwasrapidd: an R package to query, download and wrangle GWAS catalog data, Bioinformatics, Volume 36, Issue 2, 15 January 2020, Pages 649\u2013650, https://doi.org/10.1093/bioinformatics/btz605","title":"Citations:"},{"location":"multiomics-Ensembl/","text":"API-based method retrieves variant consequence proportions for human diseases Explored by: DARCI-MAHER, NICHOLAS WAXTER , RAZMA, CONNOR JOHN - (Bioinfo 201 - Winter 2022) Description Project overview Assume we are given a disease of interest Use the Ensembl phenotype annotation endpoint to extract genomic regions associated with the disease Use the Ensembl overlap endpoint to find variants in these regions 4. Use the Ensembl Variant Effect Predictor (VEP) endpoint to discover the consequences of each variant Calculate the proportions of each consequence for the disease Function to access Ensembl Rest API features \u25cf Input: Extension specifying application \u25cf Output: Object associated with application \u25cf In our case we will use this function to get a list of dictionaries with areas of the genome associated with alzheimer's Function to find gene regions in our list of dictionaries \u25cf Input: List of dictionaries of areas of genome associated with a disease \u25cf Output: List of gene regions that are associated with a disease Function to return all variants associated with regions \u25cf Input: A list of regions associated with a disease \u25cf Output: All variants associated with those regions Use VEP to get variant consequence \u25cf Input: a single variant ID (rsID) \u25cf Output: The most severe consequence of that variant (e.g. missense, splice site, stop gained, etc.) Calculate proportions of consequence in a variant list \u25cf Input: a list of variant IDs \u25cf Output: proportion of consequences for the disease associated with the list of variants Results: Proportion of variant consequences in Alzheimer\u2019s disease \u25cf Ran our full pipeline on Alzheimer\u2019s disease (EFO ID=0000249) \u25cf Found that the most common consequences in Alzheimer\u2019s variants are: 1. Intron variant (35%) 2. Missense variant (14%) 3. 3\u2019 UTR variant (13%)","title":"Example- Ensembl"},{"location":"multiomics-Ensembl/#api-based-method-retrieves-variant-consequence-proportions-for-human-diseases","text":"","title":"API-based method retrieves variant consequence proportions for human diseases"},{"location":"multiomics-Ensembl/#explored-by","text":"DARCI-MAHER, NICHOLAS WAXTER , RAZMA, CONNOR JOHN - (Bioinfo 201 - Winter 2022)","title":"Explored by:"},{"location":"multiomics-Ensembl/#description","text":"","title":"Description"},{"location":"multiomics-Ensembl/#project-overview","text":"Assume we are given a disease of interest Use the Ensembl phenotype annotation endpoint to extract genomic regions associated with the disease Use the Ensembl overlap endpoint to find variants in these regions 4. Use the Ensembl Variant Effect Predictor (VEP) endpoint to discover the consequences of each variant Calculate the proportions of each consequence for the disease","title":"Project overview"},{"location":"multiomics-Ensembl/#function-to-access-ensembl-rest-api-features","text":"\u25cf Input: Extension specifying application \u25cf Output: Object associated with application \u25cf In our case we will use this function to get a list of dictionaries with areas of the genome associated with alzheimer's","title":"Function to access Ensembl Rest API features"},{"location":"multiomics-Ensembl/#function-to-find-gene-regions-in-our-list-of-dictionaries","text":"\u25cf Input: List of dictionaries of areas of genome associated with a disease \u25cf Output: List of gene regions that are associated with a disease","title":"Function to find gene regions in our list of dictionaries"},{"location":"multiomics-Ensembl/#function-to-return-all-variants-associated-with-regions","text":"\u25cf Input: A list of regions associated with a disease \u25cf Output: All variants associated with those regions","title":"Function to return all variants associated with regions"},{"location":"multiomics-Ensembl/#use-vep-to-get-variant-consequence","text":"\u25cf Input: a single variant ID (rsID) \u25cf Output: The most severe consequence of that variant (e.g. missense, splice site, stop gained, etc.)","title":"Use VEP to get variant consequence"},{"location":"multiomics-Ensembl/#calculate-proportions-of-consequence-in-a-variant-list","text":"\u25cf Input: a list of variant IDs \u25cf Output: proportion of consequences for the disease associated with the list of variants","title":"Calculate proportions of consequence in a variant list"},{"location":"multiomics-Ensembl/#results-proportion-of-variant-consequences-in-alzheimers-disease","text":"\u25cf Ran our full pipeline on Alzheimer\u2019s disease (EFO ID=0000249) \u25cf Found that the most common consequences in Alzheimer\u2019s variants are: 1. Intron variant (35%) 2. Missense variant (14%) 3. 3\u2019 UTR variant (13%)","title":"Results: Proportion of variant consequences in Alzheimer\u2019s disease"},{"location":"multiomics-GWAS-WebGestalt/","text":"PubTator Central (PTC) API Explored by: CHEN, JESSICA , DODSON, JACK PATRICK , FLYNN-CARROLL, ALEXANDER OWEN - (Bioinformatics 201, Winter-2022, UCLA) Description: Task: Multi-omics integration to determine the biological pathways that are over-represented in a set of genes associated with Parkinson\u2019s provided via GWAS. Background: The GWAS Catalog API can provide a list of genes that are significantly associated with Parkinson\u2019s disease. WebGestalt Web API takes as input the list of genes and performs an over-representation analysis (ORA). These two APIs can be integrated to find statistics relating to a holistic set of genes related to Parkinson\u2019s disease. Goal: Identify the enrichment of Parkinson\u2019s-associated genes with respect to a panel of phenotypes provided by WebGestalt. This can give more genetic information regarding Parkinson's disease. Method: GWAS query for associated genes: Find the list of genes associated with Parkinson\u2019s from the GWAS catalog. Gene list to statistics: Input the list of related genes into the WebGestalt Web API to conduct an over-representation analysis on the gene set relative to phenotypes such as KEGG pathways or GO terms. Expected Outcome: Produce a list of over-represented biological pathways relative to a large set of genes related to Parkinson\u2019s.","title":"Example- GWAS WebGestalt"},{"location":"multiomics-GWAS-WebGestalt/#pubtator-central-ptc-api","text":"","title":"PubTator Central (PTC) API"},{"location":"multiomics-GWAS-WebGestalt/#explored-by","text":"CHEN, JESSICA , DODSON, JACK PATRICK , FLYNN-CARROLL, ALEXANDER OWEN - (Bioinformatics 201, Winter-2022, UCLA)","title":"Explored by:"},{"location":"multiomics-GWAS-WebGestalt/#description","text":"","title":"Description:"},{"location":"multiomics-GWAS-WebGestalt/#task","text":"Multi-omics integration to determine the biological pathways that are over-represented in a set of genes associated with Parkinson\u2019s provided via GWAS.","title":"Task:"},{"location":"multiomics-GWAS-WebGestalt/#background","text":"The GWAS Catalog API can provide a list of genes that are significantly associated with Parkinson\u2019s disease. WebGestalt Web API takes as input the list of genes and performs an over-representation analysis (ORA). These two APIs can be integrated to find statistics relating to a holistic set of genes related to Parkinson\u2019s disease.","title":"Background:"},{"location":"multiomics-GWAS-WebGestalt/#goal","text":"Identify the enrichment of Parkinson\u2019s-associated genes with respect to a panel of phenotypes provided by WebGestalt. This can give more genetic information regarding Parkinson's disease.","title":"Goal:"},{"location":"multiomics-GWAS-WebGestalt/#method","text":"GWAS query for associated genes: Find the list of genes associated with Parkinson\u2019s from the GWAS catalog. Gene list to statistics: Input the list of related genes into the WebGestalt Web API to conduct an over-representation analysis on the gene set relative to phenotypes such as KEGG pathways or GO terms.","title":"Method:"},{"location":"multiomics-GWAS-WebGestalt/#expected-outcome","text":"Produce a list of over-represented biological pathways relative to a large set of genes related to Parkinson\u2019s.","title":"Expected Outcome:"},{"location":"multiomics-GWAS-eQTLs/","text":"Integration of GWAS and eQTLs APIs Explored by: PIMPLASKAR, ADITYA , LI, TERENCE WENTAO , KIM, SANDY SUNG - (Bioinfo 201 - Winter 2022) Description: Task: Given a set of GWAS hits for a cancer like leukemia, retrieved from the GWAS Catalog (through gwasrapidd querying in R), can we detect genes that are variably expressed? In other words, can we map these GWAS hits as expression quantitative trait loci (eQTLs) in leukemia cells, or any other cancer type (queried through cBioPortal)? Background: For a particular cancer type, you find a set of associated SNPs and are interested in their downstream regulation on gene expression. You want to try to track any functional association of these variants on cancer gene expression pathways. Being able to track these associations can provide a more thorough view of cancer biology, while also potentially allowing for the investigation of targeted therapeutics. Goal: Detect downstream effects of GWAS hits on gene expression in the target cancer EFO trait. Method: GWAS variants: Query the GWAS Catalog with the \u2018leukemia\u2019 EFO trait, using the get_studies function to retrieve relevant studies. Extract rsids top significant GWAS hits from query using the get_variants function. These are the variants that we will investigate as potential eQTLs. We restrict the analysis to cis-eQTLs (variants localized within the region of the gene). cBioPortal and gene expression analysis: cBio portal houses datasets that have linked mutation and gene expression data. We cross-reference our discovered GWAS hits against available mutations, and perform eQTL analysis on these mutations with nearby genes. Expected outcome: Linked gene and SNP pairs for the target EFO trait and their significance. This may yield insight into variants that can regulate gene expression.","title":"Example- GWAS eQTLS"},{"location":"multiomics-GWAS-eQTLs/#integration-of-gwas-and-eqtls-apis","text":"","title":"Integration of GWAS and eQTLs APIs"},{"location":"multiomics-GWAS-eQTLs/#explored-by","text":"PIMPLASKAR, ADITYA , LI, TERENCE WENTAO , KIM, SANDY SUNG - (Bioinfo 201 - Winter 2022)","title":"Explored by:"},{"location":"multiomics-GWAS-eQTLs/#description","text":"","title":"Description:"},{"location":"multiomics-GWAS-eQTLs/#task","text":"Given a set of GWAS hits for a cancer like leukemia, retrieved from the GWAS Catalog (through gwasrapidd querying in R), can we detect genes that are variably expressed? In other words, can we map these GWAS hits as expression quantitative trait loci (eQTLs) in leukemia cells, or any other cancer type (queried through cBioPortal)?","title":"Task:"},{"location":"multiomics-GWAS-eQTLs/#background","text":"For a particular cancer type, you find a set of associated SNPs and are interested in their downstream regulation on gene expression. You want to try to track any functional association of these variants on cancer gene expression pathways. Being able to track these associations can provide a more thorough view of cancer biology, while also potentially allowing for the investigation of targeted therapeutics.","title":"Background:"},{"location":"multiomics-GWAS-eQTLs/#goal","text":"Detect downstream effects of GWAS hits on gene expression in the target cancer EFO trait.","title":"Goal:"},{"location":"multiomics-GWAS-eQTLs/#method","text":"GWAS variants: Query the GWAS Catalog with the \u2018leukemia\u2019 EFO trait, using the get_studies function to retrieve relevant studies. Extract rsids top significant GWAS hits from query using the get_variants function. These are the variants that we will investigate as potential eQTLs. We restrict the analysis to cis-eQTLs (variants localized within the region of the gene). cBioPortal and gene expression analysis: cBio portal houses datasets that have linked mutation and gene expression data. We cross-reference our discovered GWAS hits against available mutations, and perform eQTL analysis on these mutations with nearby genes.","title":"Method:"},{"location":"multiomics-GWAS-eQTLs/#expected-outcome","text":"Linked gene and SNP pairs for the target EFO trait and their significance. This may yield insight into variants that can regulate gene expression.","title":"Expected outcome:"},{"location":"multiomics-MyGeneInfo-cBioPortal/","text":"Integrating Omics DBs (MyGeneInfo-cBioPortal) Example 1: Diversity of Ewing Sarcoma driver mutations Explored by: RIDGLEY, TREVOR JAY , WANG, HAROLD ZHAOKUN , XIANG, MARK - (Bioinformatics 201, Winter-2022, UCLA) Description: Task: Given a query (Ewing Sarcoma), return genes associated with this disease and then search a collection of patient samples for mutations occurring in those genes. Background: Each year, hundreds of children are diagnosed with Ewing Sarcoma in the United States. The majority of cases are believed to be caused by reciprocal translocation between chr11 & chr22. [https://medlineplus.gov/genetics/condition/ewing-sarcoma] Goal: Understand the landscape of chromosomal rearrangements that lead to Ewing Sarcoma in patients. Method: Obtain a list of genes associated with \u201cEwing Sarcoma\u201d using the MyGeneInfo Query Service API. Search for mutations occurring in these genes using the Pediatric Ewing Sarcoma database via cBioPortal API. Expected Outcome: A list of point mutations and structural variants found within the target genes of Ewing Sarcoma patients. Results from step 1: Result from step 2: Example 2: Task: Given a query (high cholesterol), return genes and protein associated with this disease and then find the drug and validate that from PMC articles and PubMed abstracts. Background: With high cholesterol, you can develop fatty deposits in your blood vessels. Eventually, these deposits grow, making it difficult for enough blood to flow through your arteries. Sometimes, those deposits can break suddenly and form a clot that causes a heart attack or stroke. Method: Obtain a list of genes associated with \u201chigh cholesterol\u201d using the MyGeneInfo Query Service API. Use PubTator Central (PTC) API to identify drugs and validate form PMC articles and PubMed abstracts. Expected Outcome: a list of drugs with its targeted genes. Results from step 1: Results from step 2:","title":"Example- MyGenInfo and cBioportal"},{"location":"multiomics-MyGeneInfo-cBioPortal/#integrating-omics-dbs-mygeneinfo-cbioportal","text":"","title":"Integrating Omics DBs (MyGeneInfo-cBioPortal)"},{"location":"multiomics-MyGeneInfo-cBioPortal/#example-1-diversity-of-ewing-sarcoma-driver-mutations","text":"","title":"Example 1: Diversity of Ewing Sarcoma driver mutations"},{"location":"multiomics-MyGeneInfo-cBioPortal/#explored-by","text":"RIDGLEY, TREVOR JAY , WANG, HAROLD ZHAOKUN , XIANG, MARK - (Bioinformatics 201, Winter-2022, UCLA)","title":"Explored by:"},{"location":"multiomics-MyGeneInfo-cBioPortal/#description","text":"","title":"Description:"},{"location":"multiomics-MyGeneInfo-cBioPortal/#task","text":"Given a query (Ewing Sarcoma), return genes associated with this disease and then search a collection of patient samples for mutations occurring in those genes.","title":"Task:"},{"location":"multiomics-MyGeneInfo-cBioPortal/#background","text":"Each year, hundreds of children are diagnosed with Ewing Sarcoma in the United States. The majority of cases are believed to be caused by reciprocal translocation between chr11 & chr22. [https://medlineplus.gov/genetics/condition/ewing-sarcoma]","title":"Background:"},{"location":"multiomics-MyGeneInfo-cBioPortal/#goal","text":"Understand the landscape of chromosomal rearrangements that lead to Ewing Sarcoma in patients.","title":"Goal:"},{"location":"multiomics-MyGeneInfo-cBioPortal/#method","text":"Obtain a list of genes associated with \u201cEwing Sarcoma\u201d using the MyGeneInfo Query Service API. Search for mutations occurring in these genes using the Pediatric Ewing Sarcoma database via cBioPortal API.","title":"Method:"},{"location":"multiomics-MyGeneInfo-cBioPortal/#expected-outcome","text":"A list of point mutations and structural variants found within the target genes of Ewing Sarcoma patients.","title":"Expected Outcome:"},{"location":"multiomics-MyGeneInfo-cBioPortal/#results-from-step-1","text":"","title":"Results from step 1:"},{"location":"multiomics-MyGeneInfo-cBioPortal/#result-from-step-2","text":"","title":"Result from step 2:"},{"location":"multiomics-MyGeneInfo-cBioPortal/#example-2","text":"","title":"Example 2:"},{"location":"multiomics-MyGeneInfo-cBioPortal/#task_1","text":"Given a query (high cholesterol), return genes and protein associated with this disease and then find the drug and validate that from PMC articles and PubMed abstracts.","title":"Task:"},{"location":"multiomics-MyGeneInfo-cBioPortal/#background_1","text":"With high cholesterol, you can develop fatty deposits in your blood vessels. Eventually, these deposits grow, making it difficult for enough blood to flow through your arteries. Sometimes, those deposits can break suddenly and form a clot that causes a heart attack or stroke.","title":"Background:"},{"location":"multiomics-MyGeneInfo-cBioPortal/#method_1","text":"Obtain a list of genes associated with \u201chigh cholesterol\u201d using the MyGeneInfo Query Service API. Use PubTator Central (PTC) API to identify drugs and validate form PMC articles and PubMed abstracts.","title":"Method:"},{"location":"multiomics-MyGeneInfo-cBioPortal/#expected-outcome-a-list-of-drugs-with-its-targeted-genes","text":"","title":"Expected Outcome: a list of drugs with its targeted genes."},{"location":"multiomics-MyGeneInfo-cBioPortal/#results-from-step-1_1","text":"","title":"Results from step 1:"},{"location":"multiomics-MyGeneInfo-cBioPortal/#results-from-step-2","text":"","title":"Results from step 2:"},{"location":"multiomics-NCI-GDC-GO/","text":"Integration of NCI Genomic Data Commons - (GDC) API and Gene Ontology API Explored by: CHENG, MICHAEL WEN-KAI , OH, JIEUN , YAMAMOTO,RYO - (Bioinformatics 201, Winter-2022, UCLA) Description: Task: Given clinical features of interest, try to see how transcriptomic profiles (eg. from NCI Genomic Data Commons) for samples with these features differ. Input differentially expressed genes for GO enrichment analyses. Use Gene Ontology API to explore the genes and GO terms that were enriched. Background: You have a clinical feature of interest and want to see how it affects the transcriptional profile of a cancer type. You want to see which genes are differentially expressed between samples with these features and see which GO terms are associated with these genes. Goal: Find differentially expressed genes and GO terms enriched for cancer samples with that clinical feature. The result should give us clues to how (depending on significant GO term) that clinical feature affects the cancer. Method: Retrieve gene expression data: Curate RNA-seq datasets for cancer datasets using provided NCI Genomic Data Commons API, we can also retrieve metadata and clinical features for the dataset to use for later analysis Identify upregulated/downregulated genes in clinical features of interest: Using the curated dataset, run differential gene expression analysis to obtain gene list that are either upregulated or downregulated for specific clinical features Functional analysis: Using Gene Ontology API, analyze what pathways are enriched for these clinical features. This process gives us insights into how clinical features might be affected by specific pathways Expected Outcome: List of pathways with statistics based on DE genes to specific clinical features","title":"Example- NCI, GDC and GO"},{"location":"multiomics-NCI-GDC-GO/#integration-of-nci-genomic-data-commons-gdc-api-and-gene-ontology-api","text":"","title":"Integration of NCI Genomic Data Commons - (GDC) API and Gene Ontology API"},{"location":"multiomics-NCI-GDC-GO/#explored-by","text":"CHENG, MICHAEL WEN-KAI , OH, JIEUN , YAMAMOTO,RYO - (Bioinformatics 201, Winter-2022, UCLA)","title":"Explored by:"},{"location":"multiomics-NCI-GDC-GO/#description","text":"","title":"Description:"},{"location":"multiomics-NCI-GDC-GO/#task","text":"Given clinical features of interest, try to see how transcriptomic profiles (eg. from NCI Genomic Data Commons) for samples with these features differ. Input differentially expressed genes for GO enrichment analyses. Use Gene Ontology API to explore the genes and GO terms that were enriched.","title":"Task:"},{"location":"multiomics-NCI-GDC-GO/#background","text":"You have a clinical feature of interest and want to see how it affects the transcriptional profile of a cancer type. You want to see which genes are differentially expressed between samples with these features and see which GO terms are associated with these genes.","title":"Background:"},{"location":"multiomics-NCI-GDC-GO/#goal","text":"Find differentially expressed genes and GO terms enriched for cancer samples with that clinical feature. The result should give us clues to how (depending on significant GO term) that clinical feature affects the cancer.","title":"Goal:"},{"location":"multiomics-NCI-GDC-GO/#method","text":"Retrieve gene expression data: Curate RNA-seq datasets for cancer datasets using provided NCI Genomic Data Commons API, we can also retrieve metadata and clinical features for the dataset to use for later analysis Identify upregulated/downregulated genes in clinical features of interest: Using the curated dataset, run differential gene expression analysis to obtain gene list that are either upregulated or downregulated for specific clinical features Functional analysis: Using Gene Ontology API, analyze what pathways are enriched for these clinical features. This process gives us insights into how clinical features might be affected by specific pathways","title":"Method:"},{"location":"multiomics-NCI-GDC-GO/#expected-outcome","text":"List of pathways with statistics based on DE genes to specific clinical features","title":"Expected Outcome:"},{"location":"multiomics-NCI-GDC-Scanpy-WebGestalt/","text":"Integration of NCI Genomic Data Commons - (GDC) API, Scanpy and WebGestalt APIs Explored by: HUANG, HUILING , FU, JINGYUAN - (Bioinformatics 201, Winter-2022, UCLA) Description: Task: Functional pathway enrichment analysis of disease marker genes identified from RNA-sequencing datasets. Background: Given RNA-seq data from normal and disease cells (such as cancer cells) from the same tissue of an individual, identify marker genes and study the genetic pathway enrichment of the disease. Goal: Identify the enriched terms from different functional databases (including pathway, network, disease, etc.) from cancer marker genes. The terms are expected to be related to underlying molecular mechanisms and the development process of the chosen disease. Method: RNA-seq retrieval: RNA-seq data could be obtained experimentally, or downloaded from public repositories such as NCI Genomic Data Commons - (GDC) API for a specific disease of interest. Marker gene identification: We can analyze the RNA-seq dataset using Scanpy API, that involves filtering, clustering, and identifying marker genes. This step will output a list of marker genes specific to this disease. Enrichment analysis: Eventually, we can input the list of marker genes to WebGestalt API and retrieve functional pathway enrichment analysis results. Expected Outcome: A list of functional enriched terms that would potentially involve in the disease mechanism, with statistics and figures indicating the significance of each term.","title":"Example- NCI, GDC ScanPy and EebGestalt"},{"location":"multiomics-NCI-GDC-Scanpy-WebGestalt/#integration-of-nci-genomic-data-commons-gdc-api-scanpy-and-webgestalt-apis","text":"","title":"Integration of NCI Genomic Data Commons - (GDC) API, Scanpy and WebGestalt APIs"},{"location":"multiomics-NCI-GDC-Scanpy-WebGestalt/#explored-by","text":"HUANG, HUILING , FU, JINGYUAN - (Bioinformatics 201, Winter-2022, UCLA)","title":"Explored by:"},{"location":"multiomics-NCI-GDC-Scanpy-WebGestalt/#description","text":"","title":"Description:"},{"location":"multiomics-NCI-GDC-Scanpy-WebGestalt/#task","text":"Functional pathway enrichment analysis of disease marker genes identified from RNA-sequencing datasets.","title":"Task:"},{"location":"multiomics-NCI-GDC-Scanpy-WebGestalt/#background","text":"Given RNA-seq data from normal and disease cells (such as cancer cells) from the same tissue of an individual, identify marker genes and study the genetic pathway enrichment of the disease.","title":"Background:"},{"location":"multiomics-NCI-GDC-Scanpy-WebGestalt/#goal","text":"Identify the enriched terms from different functional databases (including pathway, network, disease, etc.) from cancer marker genes. The terms are expected to be related to underlying molecular mechanisms and the development process of the chosen disease.","title":"Goal:"},{"location":"multiomics-NCI-GDC-Scanpy-WebGestalt/#method","text":"RNA-seq retrieval: RNA-seq data could be obtained experimentally, or downloaded from public repositories such as NCI Genomic Data Commons - (GDC) API for a specific disease of interest. Marker gene identification: We can analyze the RNA-seq dataset using Scanpy API, that involves filtering, clustering, and identifying marker genes. This step will output a list of marker genes specific to this disease. Enrichment analysis: Eventually, we can input the list of marker genes to WebGestalt API and retrieve functional pathway enrichment analysis results.","title":"Method:"},{"location":"multiomics-NCI-GDC-Scanpy-WebGestalt/#expected-outcome","text":"A list of functional enriched terms that would potentially involve in the disease mechanism, with statistics and figures indicating the significance of each term.","title":"Expected Outcome:"},{"location":"multiomics-PyBiomart-Scanpy-GO-Uniprot/","text":"Integration of PyBiomart-Scanpy-GO-Scanpy-UniProt APIs Project II Explored by: HUANG, HELEN , MATTHEWS, JAMIE EMOTO , PERRIE, JONATHAN VI - (Bioinformatics 201, Winter-2022, UCLA) Description: Task: Given a scRNA-seq data set containing a mixture of cell types, annotate with gene names (e.g. PyBiomart), identify the marker genes corresponding to each cell type and construct a trajectory mapping (e.g. Scanpy). Additionally, identify enriched Gene Ontology (GO) terms within marker genes to understand key functions of each cell type (e.g. Gene Ontology API). Based on the gene markers, a subsequent proteomics study can be followed up on the newly classified cell types. Finally we can find the names of the differentially expressed proteins and functionally annotate them (e.g. UniProt API). Background: Cells are specialized for different functions. To better understand rare cell types, we need to identify genes that are distinct in their gene expression profile and look at enriched biological processes within these cells to understand some key functions of these different cell types. We can further look at their ontological frame with respect to other cell types mapped in some embedding space. Goal: Reclassify cell types in the human blood and append newly identified cell types to the lineage tree of known cell types. Understand the specialized functions of these newly identified cells compared to known cell types. Method: Gene name annotation: Use PyBiomart and the list of gene IDs to get gene name annotations Marker gene identification: Use Scanpy pipeline (with some downsampling to balance class sizes) to filter and cluster cells. Then from these clusterings, compute marker genes Gene Ontology: Use the list of identified marker genes for each cell type to get enriched GO terms from Gene Ontology API Pseudotime analysis: Use Scanpy pipeline with a separate projection of rare cell types to embedding after initial trajectory construction Proteins: Use the protein list and UniProt API to get protein information (e.g., protein name) from UniProt and use functional annotating software (e.g. PIGNON) to detect enriched biological processes to understand the function of the cells. Expected Outcome: Marker genes for new cell types, cell type trajectory, and functional annotations for them. Reference: This project is modeled after \u201cSingle-cell RNA-seq reveals new types of human blood dendritic cells, monocytes, and progenitors\u201d (https://www.science.org/doi/10.1126/science.aah4573)","title":"Example- Scanpy, PyBioMart, ScanPy, Go, and Uniprot"},{"location":"multiomics-PyBiomart-Scanpy-GO-Uniprot/#integration-of-pybiomart-scanpy-go-scanpy-uniprot-apis","text":"","title":"Integration of PyBiomart-Scanpy-GO-Scanpy-UniProt APIs"},{"location":"multiomics-PyBiomart-Scanpy-GO-Uniprot/#project-ii","text":"","title":"Project II"},{"location":"multiomics-PyBiomart-Scanpy-GO-Uniprot/#explored-by","text":"HUANG, HELEN , MATTHEWS, JAMIE EMOTO , PERRIE, JONATHAN VI - (Bioinformatics 201, Winter-2022, UCLA)","title":"Explored by:"},{"location":"multiomics-PyBiomart-Scanpy-GO-Uniprot/#description","text":"","title":"Description:"},{"location":"multiomics-PyBiomart-Scanpy-GO-Uniprot/#task","text":"Given a scRNA-seq data set containing a mixture of cell types, annotate with gene names (e.g. PyBiomart), identify the marker genes corresponding to each cell type and construct a trajectory mapping (e.g. Scanpy). Additionally, identify enriched Gene Ontology (GO) terms within marker genes to understand key functions of each cell type (e.g. Gene Ontology API). Based on the gene markers, a subsequent proteomics study can be followed up on the newly classified cell types. Finally we can find the names of the differentially expressed proteins and functionally annotate them (e.g. UniProt API).","title":"Task:"},{"location":"multiomics-PyBiomart-Scanpy-GO-Uniprot/#background","text":"Cells are specialized for different functions. To better understand rare cell types, we need to identify genes that are distinct in their gene expression profile and look at enriched biological processes within these cells to understand some key functions of these different cell types. We can further look at their ontological frame with respect to other cell types mapped in some embedding space.","title":"Background:"},{"location":"multiomics-PyBiomart-Scanpy-GO-Uniprot/#goal","text":"Reclassify cell types in the human blood and append newly identified cell types to the lineage tree of known cell types. Understand the specialized functions of these newly identified cells compared to known cell types.","title":"Goal:"},{"location":"multiomics-PyBiomart-Scanpy-GO-Uniprot/#method","text":"Gene name annotation: Use PyBiomart and the list of gene IDs to get gene name annotations Marker gene identification: Use Scanpy pipeline (with some downsampling to balance class sizes) to filter and cluster cells. Then from these clusterings, compute marker genes Gene Ontology: Use the list of identified marker genes for each cell type to get enriched GO terms from Gene Ontology API Pseudotime analysis: Use Scanpy pipeline with a separate projection of rare cell types to embedding after initial trajectory construction Proteins: Use the protein list and UniProt API to get protein information (e.g., protein name) from UniProt and use functional annotating software (e.g. PIGNON) to detect enriched biological processes to understand the function of the cells.","title":"Method:"},{"location":"multiomics-PyBiomart-Scanpy-GO-Uniprot/#expected-outcome","text":"Marker genes for new cell types, cell type trajectory, and functional annotations for them.","title":"Expected Outcome:"},{"location":"multiomics-PyBiomart-Scanpy-GO-Uniprot/#reference","text":"This project is modeled after \u201cSingle-cell RNA-seq reveals new types of human blood dendritic cells, monocytes, and progenitors\u201d (https://www.science.org/doi/10.1126/science.aah4573)","title":"Reference:"},{"location":"multiomics-Scanpy-GO-Uniprot/","text":"API Integration Proposal: Title: Determining functional differences in aging on a single cell level Explored by: HUANG, HELEN , MATTHEWS, JAMIE EMOTO , PERRIE, JONATHAN VI - (Bioinformatics 201, Winter-2022, UCLA) Description: Task: Retrieve various single-cell RNA sequencing data from human patients from fat tissue, annotate cell types (i.e FACS or marker gene analysis) and then build a tree-based classifier to search for informative genes. Background: Given single-cell RNA-sequencing data, downloaded and integrated using a general purpose API, e.g., Scanpy, we may want to determine a list of informative genes by cell type and time point before searching gene annotation databases such as Gene Ontology or gene product databases such as UniProt for biologically interesting signals, e.g., functional differences between cell types that have been conserved or that change over time. Goal: Determine the potential function and potential phenotypic changes that occur due to aging in a particular tissue or set of tissues. Method: Use Scanpy to download and integrate publicly available ScRNA datasets from NCBI for multiple patients across the same tissue types. Label data sets by cell type. Separate datasets out by time points, e.g., by age. Build a tree-based classifier to classify each cell type. Search for most informative genes derived from the tree-based classifier at each time point. Given this list of most informative genes, search in Gene Ontology or UniProt to search for functional differences that have been conserved or changed over time. Expected Outcome: There will be genes that constantly remain informative of cell type across age. However some genes might become more important in some cell datasets from older patients. These may include genes relating to inflammation, while those related to cell growth may become less important.","title":"Example- Scanpy, GO and Uniprot"},{"location":"multiomics-Scanpy-GO-Uniprot/#api-integration-proposal","text":"","title":"API Integration Proposal:"},{"location":"multiomics-Scanpy-GO-Uniprot/#title-determining-functional-differences-in-aging-on-a-single-cell-level","text":"","title":"Title: Determining functional differences in aging on a single cell level"},{"location":"multiomics-Scanpy-GO-Uniprot/#explored-by","text":"HUANG, HELEN , MATTHEWS, JAMIE EMOTO , PERRIE, JONATHAN VI - (Bioinformatics 201, Winter-2022, UCLA)","title":"Explored by:"},{"location":"multiomics-Scanpy-GO-Uniprot/#description","text":"","title":"Description:"},{"location":"multiomics-Scanpy-GO-Uniprot/#task","text":"Retrieve various single-cell RNA sequencing data from human patients from fat tissue, annotate cell types (i.e FACS or marker gene analysis) and then build a tree-based classifier to search for informative genes.","title":"Task:"},{"location":"multiomics-Scanpy-GO-Uniprot/#background","text":"Given single-cell RNA-sequencing data, downloaded and integrated using a general purpose API, e.g., Scanpy, we may want to determine a list of informative genes by cell type and time point before searching gene annotation databases such as Gene Ontology or gene product databases such as UniProt for biologically interesting signals, e.g., functional differences between cell types that have been conserved or that change over time.","title":"Background:"},{"location":"multiomics-Scanpy-GO-Uniprot/#goal","text":"Determine the potential function and potential phenotypic changes that occur due to aging in a particular tissue or set of tissues.","title":"Goal:"},{"location":"multiomics-Scanpy-GO-Uniprot/#method","text":"Use Scanpy to download and integrate publicly available ScRNA datasets from NCBI for multiple patients across the same tissue types. Label data sets by cell type. Separate datasets out by time points, e.g., by age. Build a tree-based classifier to classify each cell type. Search for most informative genes derived from the tree-based classifier at each time point. Given this list of most informative genes, search in Gene Ontology or UniProt to search for functional differences that have been conserved or changed over time.","title":"Method:"},{"location":"multiomics-Scanpy-GO-Uniprot/#expected-outcome","text":"There will be genes that constantly remain informative of cell type across age. However some genes might become more important in some cell datasets from older patients. These may include genes relating to inflammation, while those related to cell growth may become less important.","title":"Expected Outcome:"},{"location":"multiomics-Scanpy-GO/","text":"Proposal: Determining functional differences in aging on a single cell level Explored by: FLORES, MARIA V , HAMILTON, TIMOTHY , MAH, JONATHAN CHARLES - (Bioinfo 201 - Winter 2022) Description: Task and Requirements: Determine how cells of particular types in a particular tissue change their functional phenotype during the aging process Required to Integrate Data from Multiple patients and multiple time points to identify cell types Requires a database of Genes and Functional Analyses Background and Goal: Given scRNA-seq data, downloaded and integrated using Scanpy We want to find a list of informative genes for functional differences by cell type and age Cells are known to undergo changes in size shape and number due to aging Once we have a list of informative genes, we can consult a gene annotation database or gene product database for functional differences across cell type or age. Our goal is to determine the potential functional changes and potential phenotypic changes that occur due to aging in a particular tissue or set of tissues. Method: Use Scanpy to download and integrate publicly available ScRNA datasets from NCBI for multiple patients across the same tissue types. Label data sets by cell type. Separate datasets out by time points, e.g., by age. Build a tree-based classifier to classify each cell type. Search for most informative genes derived from the tree-based classifier at each time point. Given this list of most informative genes, search in Gene Ontology or UniProt to search for functional differences that have been conserved or changed over time. Expected Outcome: Cell types should roughly be the same during the aging process ( with some exceptions) a. Aging affects internal cellular functions but not the composition of cells (Tissue dependent) Certain Functional phenotypes will be overexpressed in older patients b. E.g Inflammation Certain Functional Phenotypes will be underexpressed in older patients c. E.g quiescent stem cells related pathways","title":"Example- Scanpy Go"},{"location":"multiomics-Scanpy-GO/#proposal-determining-functional-differences-in-aging-on-a-single-cell-level","text":"","title":"Proposal: Determining functional differences in aging on a single cell level"},{"location":"multiomics-Scanpy-GO/#explored-by","text":"FLORES, MARIA V , HAMILTON, TIMOTHY , MAH, JONATHAN CHARLES - (Bioinfo 201 - Winter 2022)","title":"Explored by:"},{"location":"multiomics-Scanpy-GO/#description","text":"","title":"Description:"},{"location":"multiomics-Scanpy-GO/#task-and-requirements","text":"Determine how cells of particular types in a particular tissue change their functional phenotype during the aging process Required to Integrate Data from Multiple patients and multiple time points to identify cell types Requires a database of Genes and Functional Analyses","title":"Task and Requirements:"},{"location":"multiomics-Scanpy-GO/#background-and-goal","text":"Given scRNA-seq data, downloaded and integrated using Scanpy We want to find a list of informative genes for functional differences by cell type and age Cells are known to undergo changes in size shape and number due to aging Once we have a list of informative genes, we can consult a gene annotation database or gene product database for functional differences across cell type or age. Our goal is to determine the potential functional changes and potential phenotypic changes that occur due to aging in a particular tissue or set of tissues.","title":"Background and Goal:"},{"location":"multiomics-Scanpy-GO/#method","text":"Use Scanpy to download and integrate publicly available ScRNA datasets from NCBI for multiple patients across the same tissue types. Label data sets by cell type. Separate datasets out by time points, e.g., by age. Build a tree-based classifier to classify each cell type. Search for most informative genes derived from the tree-based classifier at each time point. Given this list of most informative genes, search in Gene Ontology or UniProt to search for functional differences that have been conserved or changed over time.","title":"Method:"},{"location":"multiomics-Scanpy-GO/#expected-outcome","text":"Cell types should roughly be the same during the aging process ( with some exceptions) a. Aging affects internal cellular functions but not the composition of cells (Tissue dependent) Certain Functional phenotypes will be overexpressed in older patients b. E.g Inflammation Certain Functional Phenotypes will be underexpressed in older patients c. E.g quiescent stem cells related pathways","title":"Expected Outcome:"},{"location":"multiomics-Scanpy-PyBio-Mart/","text":"Integration of Scanpy-PyBio Mart Explored by: HUANG, ELAINE , XUE, ALBERT , Wei, Angela - (Bioinfo 201 - Winter 2022) Description: Task: Given a list of marker genes for specific cell types, convert the format of the gene name from hgnc_symbol to their ENSEMBL IDs. Background: Single-cell RNA-seq is revolutionary given that it can allow scientists to study cell- type specific expression rather than bulk tissue. In order to identify specific cell types, the expression of marker genes for those cells must be identified. However, gene quantification tools often rely on the gene names to be a specific format, i.e. ENSEMBL IDs. Therefore, an easy way to convert gene names is necessary. Goal: Convert single-cell marker genes (identified from the scanpy API) from hgnc_symbol to ENSEMBL. Method: Use the scanpy API to pull lists of marker genes for specific cell types. We will then use the PyBio Mart method for querying biomart databases using Python to easily convert the gene names into ENSEMBL format. Expected outcome: A dataframe with more detailed annotation of cell marker genes","title":"Example- Scanpy and  PyBioMart"},{"location":"multiomics-Scanpy-PyBio-Mart/#integration-of-scanpy-pybio-mart","text":"","title":"Integration of Scanpy-PyBio Mart"},{"location":"multiomics-Scanpy-PyBio-Mart/#explored-by","text":"HUANG, ELAINE , XUE, ALBERT , Wei, Angela - (Bioinfo 201 - Winter 2022)","title":"Explored by:"},{"location":"multiomics-Scanpy-PyBio-Mart/#description","text":"","title":"Description:"},{"location":"multiomics-Scanpy-PyBio-Mart/#task","text":"Given a list of marker genes for specific cell types, convert the format of the gene name from hgnc_symbol to their ENSEMBL IDs.","title":"Task:"},{"location":"multiomics-Scanpy-PyBio-Mart/#background","text":"Single-cell RNA-seq is revolutionary given that it can allow scientists to study cell- type specific expression rather than bulk tissue. In order to identify specific cell types, the expression of marker genes for those cells must be identified. However, gene quantification tools often rely on the gene names to be a specific format, i.e. ENSEMBL IDs. Therefore, an easy way to convert gene names is necessary.","title":"Background:"},{"location":"multiomics-Scanpy-PyBio-Mart/#goal","text":"Convert single-cell marker genes (identified from the scanpy API) from hgnc_symbol to ENSEMBL.","title":"Goal:"},{"location":"multiomics-Scanpy-PyBio-Mart/#method","text":"Use the scanpy API to pull lists of marker genes for specific cell types. We will then use the PyBio Mart method for querying biomart databases using Python to easily convert the gene names into ENSEMBL format.","title":"Method:"},{"location":"multiomics-Scanpy-PyBio-Mart/#expected-outcome","text":"A dataframe with more detailed annotation of cell marker genes","title":"Expected outcome:"},{"location":"multiomics-omim-ucsc-go-Uniprot-DrugBank/","text":"Project: Using Multiple Omics Databases to Find Novel Gene Targets in Mendelian Diseases Explored by: HU, RAN , NGO, KATHIE J , WANG, YE - (Bioinformatics 201, Winter-2022, UCLA) Description: Task: Given a mendelian disease (i.e. hemophilia), find known genes associated with the disease (i.e. OMIM, Online Mendelian Inheritance in Man). Use the gene list to find sequence information (i.e. UCSC Genome Browser) or determine relevant biological pathways through Gene Ontology (GO) enrichment analysis or find protein complexes (i.e. UniProt) that could be potential drug targets. Find a list of drugs that target these genes/proteins (i.e. DrugBank) and verify they are treatments for the disease of interest. Background: Starting with a genetic/mendelian disease of interest, we use OMIM to find a list of known genes or genes associated with the disease of interest. We want to see which genes are existing drug targets for the disease of interest. By looking at sequence data, enriched pathways, and protein complexes, we want to find novel gene candidates for therapeutic drug targets. Goal: Find candidate genes associated with disease that are currently not drug targets. Methods: Genetic Disease/Phenotype Interest: Use the OMIM API to perform a disease/phenotypic keyword search (i.e. hemophilia) to obtain a list of known genes associated with disease or phenotype of interest. DNA/cDNA sequence: Use the gene list as input for the UCSC Genome Browser API to get the DNA/cDNA sequences that can be drug targets. Biological Pathway/Protein Domain: Use the gene list as input for the GO Resource API to find enriched biological processes associated with disease. Use the gene list as input into the Uniprot API to find protein complexes that can be drug targets. Drugs: Use the DrugBank API to find a list of drugs and their gene targets for the disease of interest. This will identify existing drugs for treatment and genes that are targets of such drugs. Novel Candidate Genes: Using the information from the previous steps, we can find potential gene candidates that are associated with the disease of interest and can be future drug targets of interest for disease treatment. Expected outcome: A list of genes/proteins that are associated with disease and currently not targeted for treatment. These genes/proteins can be used for future therapeutic research. Future directions include looking at protein-protein interactions as additional candidates for targeted gene therapy.","title":"Example- Omim, USGC, GO, Uniprot and DrugBank"},{"location":"multiomics-omim-ucsc-go-Uniprot-DrugBank/#project-using-multiple-omics-databases-to-find-novel-gene-targets-in-mendelian","text":"Diseases","title":"Project: Using Multiple Omics Databases to Find Novel Gene Targets in Mendelian"},{"location":"multiomics-omim-ucsc-go-Uniprot-DrugBank/#explored-by","text":"HU, RAN , NGO, KATHIE J , WANG, YE - (Bioinformatics 201, Winter-2022, UCLA)","title":"Explored by:"},{"location":"multiomics-omim-ucsc-go-Uniprot-DrugBank/#description","text":"","title":"Description:"},{"location":"multiomics-omim-ucsc-go-Uniprot-DrugBank/#task","text":"Given a mendelian disease (i.e. hemophilia), find known genes associated with the disease (i.e. OMIM, Online Mendelian Inheritance in Man). Use the gene list to find sequence information (i.e. UCSC Genome Browser) or determine relevant biological pathways through Gene Ontology (GO) enrichment analysis or find protein complexes (i.e. UniProt) that could be potential drug targets. Find a list of drugs that target these genes/proteins (i.e. DrugBank) and verify they are treatments for the disease of interest.","title":"Task:"},{"location":"multiomics-omim-ucsc-go-Uniprot-DrugBank/#background","text":"Starting with a genetic/mendelian disease of interest, we use OMIM to find a list of known genes or genes associated with the disease of interest. We want to see which genes are existing drug targets for the disease of interest. By looking at sequence data, enriched pathways, and protein complexes, we want to find novel gene candidates for therapeutic drug targets.","title":"Background:"},{"location":"multiomics-omim-ucsc-go-Uniprot-DrugBank/#goal","text":"Find candidate genes associated with disease that are currently not drug targets.","title":"Goal:"},{"location":"multiomics-omim-ucsc-go-Uniprot-DrugBank/#methods","text":"Genetic Disease/Phenotype Interest: Use the OMIM API to perform a disease/phenotypic keyword search (i.e. hemophilia) to obtain a list of known genes associated with disease or phenotype of interest. DNA/cDNA sequence: Use the gene list as input for the UCSC Genome Browser API to get the DNA/cDNA sequences that can be drug targets. Biological Pathway/Protein Domain: Use the gene list as input for the GO Resource API to find enriched biological processes associated with disease. Use the gene list as input into the Uniprot API to find protein complexes that can be drug targets. Drugs: Use the DrugBank API to find a list of drugs and their gene targets for the disease of interest. This will identify existing drugs for treatment and genes that are targets of such drugs. Novel Candidate Genes: Using the information from the previous steps, we can find potential gene candidates that are associated with the disease of interest and can be future drug targets of interest for disease treatment.","title":"Methods:"},{"location":"multiomics-omim-ucsc-go-Uniprot-DrugBank/#expected-outcome","text":"A list of genes/proteins that are associated with disease and currently not targeted for treatment. These genes/proteins can be used for future therapeutic research. Future directions include looking at protein-protein interactions as additional candidates for targeted gene therapy.","title":"Expected outcome:"},{"location":"multiomics-omim-ucsc/","text":"Drug repurposing suggestions for Mendelian Disorders Explored by: Boulier, Kristin , GORLA, PURNACHANDRA ADITYA , MUSELLA, FRANCESCO - (Bioinformatics 201, Winter-2022, UCLA) Description: Task: Identify existing drugs that may be effective for monogenic Mendelian disorders Background: Monogenic Mendelian disorders are often rare diseases with a very small number of patients, making it less appealing for drug companies to develop drugs targeting the disorder due to a smaller potential market and therefore smaller profits. Repurposing existing medications has the potential to bring effective therapies to market much more quickly. Given that these disorders have a single underlying cause, identifying existing drugs with the same or similar molecular targets may be an effective way to identify promising therapies. Goal: Identify existing medications that target Mendelian disease genes or genes that interact with Mendelian disease genes Method: Input: One Mendelian monogenic disorder Disease to gene: Create an API to communicate with the OMIM database through provided API functionality. This API allows identification of disease \u2192 gene associations. Gene to Drug: Take gene from step 2 and input gene name to UCSC Genome Browser API. There are many possible types of information you can pull from this API and one option includes gene gene interactions overlaid with drugs that target each gene (both gene of interest and all genes that interact with your gene of interest). Pull all drug names associated with input gene and interacting genes. Output: list of drugs that may be effective for your original monogenic disorder. Example: Drug repurposing suggestions for Mendelian Disorders","title":"Example- Omim and UCSC"},{"location":"multiomics-omim-ucsc/#drug-repurposing-suggestions-for-mendelian-disorders","text":"","title":"Drug repurposing suggestions for Mendelian Disorders"},{"location":"multiomics-omim-ucsc/#explored-by","text":"Boulier, Kristin , GORLA, PURNACHANDRA ADITYA , MUSELLA, FRANCESCO - (Bioinformatics 201, Winter-2022, UCLA)","title":"Explored by:"},{"location":"multiomics-omim-ucsc/#description","text":"","title":"Description:"},{"location":"multiomics-omim-ucsc/#task","text":"Identify existing drugs that may be effective for monogenic Mendelian disorders Background: Monogenic Mendelian disorders are often rare diseases with a very small number of patients, making it less appealing for drug companies to develop drugs targeting the disorder due to a smaller potential market and therefore smaller profits. Repurposing existing medications has the potential to bring effective therapies to market much more quickly. Given that these disorders have a single underlying cause, identifying existing drugs with the same or similar molecular targets may be an effective way to identify promising therapies.","title":"Task:"},{"location":"multiomics-omim-ucsc/#goal","text":"Identify existing medications that target Mendelian disease genes or genes that interact with Mendelian disease genes","title":"Goal:"},{"location":"multiomics-omim-ucsc/#method","text":"Input: One Mendelian monogenic disorder Disease to gene: Create an API to communicate with the OMIM database through provided API functionality. This API allows identification of disease \u2192 gene associations. Gene to Drug: Take gene from step 2 and input gene name to UCSC Genome Browser API. There are many possible types of information you can pull from this API and one option includes gene gene interactions overlaid with drugs that target each gene (both gene of interest and all genes that interact with your gene of interest). Pull all drug names associated with input gene and interacting genes. Output: list of drugs that may be effective for your original monogenic disorder.","title":"Method:"},{"location":"multiomics-omim-ucsc/#example-drug-repurposing-suggestions-for-mendelian-disorders","text":"","title":"Example: Drug repurposing suggestions for Mendelian Disorders"},{"location":"nci-genomic-data-commons/","text":"NCI Genomic Data Commons - (GDC) API Explored by: CHENG, MICHAEL WEN-KAI , OH, JIEUN , YAMAMOTO,RYO - (Bioinformatics 201, Winter-2022, UCLA) Description: Genomics Data Commons is a database where cancer researchers and bioinformaticians can download patient data for cancer analysis, including RNA-sequencing, DNA methylation, and ATAC-seq for a variety of cancer types. GDC portal can be accessed directly through this link: portal.gdc.cancer.gov . You can find instructions for how to use two popular API\u2019s here: GDC command line API TCGAbiolinks R package Use Cases: Data Exploration and Retrieval \u2013 Gather genomic data from patients of a certain cancer type on the Repository page or through the above APIs. Clinical Comparison \u2013 Compare clinical characteristics of specified groups of patients on the Analysis page . Tutorial: Tutorial for NIH Genomic Data Common in Google Colab is available here.","title":"NCI Genomic Data Common"},{"location":"nci-genomic-data-commons/#nci-genomic-data-commons-gdc-api","text":"","title":"NCI Genomic Data Commons - (GDC) API"},{"location":"nci-genomic-data-commons/#explored-by","text":"CHENG, MICHAEL WEN-KAI , OH, JIEUN , YAMAMOTO,RYO - (Bioinformatics 201, Winter-2022, UCLA)","title":"Explored by:"},{"location":"nci-genomic-data-commons/#description","text":"Genomics Data Commons is a database where cancer researchers and bioinformaticians can download patient data for cancer analysis, including RNA-sequencing, DNA methylation, and ATAC-seq for a variety of cancer types. GDC portal can be accessed directly through this link: portal.gdc.cancer.gov . You can find instructions for how to use two popular API\u2019s here: GDC command line API TCGAbiolinks R package","title":"Description:"},{"location":"nci-genomic-data-commons/#use-cases","text":"Data Exploration and Retrieval \u2013 Gather genomic data from patients of a certain cancer type on the Repository page or through the above APIs. Clinical Comparison \u2013 Compare clinical characteristics of specified groups of patients on the Analysis page .","title":"Use Cases:"},{"location":"nci-genomic-data-commons/#tutorial","text":"Tutorial for NIH Genomic Data Common in Google Colab is available here.","title":"Tutorial:"},{"location":"new-gene-info/","text":"MyGene.Info API Explored by: RIDGLEY, TREVOR JAY , WANG, HAROLD ZHAOKUN , XIANG, MARK - (Bioinformatics 201, Winter-2022, UCLA) Description: MyGene.info is a web API built with BioThings SDK for accessing gene annotation information from different sources and integrating that information. There are 2 services: Gene Query & Gene Annotation. With gene query, genes associated with various conditions such as gene position, protein and pathways can be found. If the gene of interest is known, then full gene information can be accessed directly with either their NCBI or EMSEMBL IDs. Use Cases: Query genes: Query gene query service Find genes associated with a protein, organism, genomic interval, name, alias, pathway, gene ontology, etc. Some sample results are below: http://mygene.info/v3/query?q=symbol:cdk2 http://mygene.info/v3/query?q=chrX:151,073,054-151,383,976&species:human Annotate genes: Anote Gene annotation service Return aggregated info for a desired gene object using either Entrez (\u201c1017\u201d) or Ensembl (\u201cENSG00000123374\u201d). Some sample results are below: http://mygene.info/v3/gene/1017 http://mygene.info/v3/gene/ENSG00000123374 Tutorial: Tutorial for MyGene.Info in Google Colab is available here.","title":"New Gene Info"},{"location":"new-gene-info/#mygeneinfo-api","text":"","title":"MyGene.Info API"},{"location":"new-gene-info/#explored-by","text":"RIDGLEY, TREVOR JAY , WANG, HAROLD ZHAOKUN , XIANG, MARK - (Bioinformatics 201, Winter-2022, UCLA)","title":"Explored by:"},{"location":"new-gene-info/#description","text":"MyGene.info is a web API built with BioThings SDK for accessing gene annotation information from different sources and integrating that information. There are 2 services: Gene Query & Gene Annotation. With gene query, genes associated with various conditions such as gene position, protein and pathways can be found. If the gene of interest is known, then full gene information can be accessed directly with either their NCBI or EMSEMBL IDs.","title":"Description:"},{"location":"new-gene-info/#use-cases","text":"Query genes: Query gene query service Find genes associated with a protein, organism, genomic interval, name, alias, pathway, gene ontology, etc. Some sample results are below: http://mygene.info/v3/query?q=symbol:cdk2 http://mygene.info/v3/query?q=chrX:151,073,054-151,383,976&species:human Annotate genes: Anote Gene annotation service Return aggregated info for a desired gene object using either Entrez (\u201c1017\u201d) or Ensembl (\u201cENSG00000123374\u201d). Some sample results are below: http://mygene.info/v3/gene/1017 http://mygene.info/v3/gene/ENSG00000123374","title":"Use Cases:"},{"location":"new-gene-info/#tutorial","text":"Tutorial for MyGene.Info in Google Colab is available here.","title":"Tutorial:"},{"location":"omim-api/","text":"Drug repurposing suggestions for Mendelian Disorders Explored by: Boulier, Kristin , GORLA, PURNACHANDRA ADITYA , MUSELLA, FRANCESCO - (Bioinformatics 201, Winter-2022, UCLA) Description: Task: Identify existing drugs that may be effective for monogenic Mendelian disorders Background: Monogenic Mendelian disorders are often rare diseases with a very small number of patients, making it less appealing for drug companies to develop drugs targeting the disorder due to a smaller potential market and therefore smaller profits. Repurposing existing medications has the potential to bring effective therapies to market much more quickly. Given that these disorders have a single underlying cause, identifying existing drugs with the same or similar molecular targets may be an effective way to identify promising therapies. Goal: Identify existing medications that target Mendelian disease genes or genes that interact with Mendelian disease genes Method: Input: One Mendelian monogenic disorder Disease to gene: Create an API to communicate with the OMIM database through provided API functionality. This API allows identification of disease \u2192 gene associations. Gene to Drug: Take gene from step 2 and input gene name to UCSC Genome Browser API. There are many possible types of information you can pull from this API and one option includes gene gene interactions overlaid with drugs that target each gene (both gene of interest and all genes that interact with your gene of interest). Pull all drug names associated with input gene and interacting genes. Output: list of drugs that may be effective for your original monogenic disorder. Example: Drug repurposing suggestions for Mendelian Disorders","title":"OMIM API"},{"location":"omim-api/#drug-repurposing-suggestions-for-mendelian-disorders","text":"","title":"Drug repurposing suggestions for Mendelian Disorders"},{"location":"omim-api/#explored-by","text":"Boulier, Kristin , GORLA, PURNACHANDRA ADITYA , MUSELLA, FRANCESCO - (Bioinformatics 201, Winter-2022, UCLA)","title":"Explored by:"},{"location":"omim-api/#description","text":"","title":"Description:"},{"location":"omim-api/#task-identify-existing-drugs-that-may-be-effective-for-monogenic-mendelian-disorders","text":"Background: Monogenic Mendelian disorders are often rare diseases with a very small number of patients, making it less appealing for drug companies to develop drugs targeting the disorder due to a smaller potential market and therefore smaller profits. Repurposing existing medications has the potential to bring effective therapies to market much more quickly. Given that these disorders have a single underlying cause, identifying existing drugs with the same or similar molecular targets may be an effective way to identify promising therapies.","title":"Task: Identify existing drugs that may be effective for monogenic Mendelian disorders"},{"location":"omim-api/#goal-identify-existing-medications-that-target-mendelian-disease-genes-or-genes-that-interact-with-mendelian-disease-genes","text":"","title":"Goal: Identify existing medications that target Mendelian disease genes or genes that interact with Mendelian disease genes"},{"location":"omim-api/#method","text":"Input: One Mendelian monogenic disorder Disease to gene: Create an API to communicate with the OMIM database through provided API functionality. This API allows identification of disease \u2192 gene associations. Gene to Drug: Take gene from step 2 and input gene name to UCSC Genome Browser API. There are many possible types of information you can pull from this API and one option includes gene gene interactions overlaid with drugs that target each gene (both gene of interest and all genes that interact with your gene of interest). Pull all drug names associated with input gene and interacting genes. Output: list of drugs that may be effective for your original monogenic disorder.","title":"Method:"},{"location":"omim-api/#example-drug-repurposing-suggestions-for-mendelian-disorders","text":"","title":"Example: Drug repurposing suggestions for Mendelian Disorders"},{"location":"pubtator-central-api/","text":"PubTator Central (PTC) API Explored by: CHEN, JESSICA , DODSON, JACK PATRICK , FLYNN-CARROLL, ALEXANDER OWEN - (Bioinformatics 201, Winter-2022, UCLA) Description: PTC is a Web application that gives automatic annotations of biomedical concepts (e.g., mutations, genes, diseases, drugs, diseases) extracted from PMC articles and PubMed abstracts. PTC can be accessed at National Library of Medicine website and instructions and examples for usage can be located at API document site . Use cases: Retrieve all annotations for each PubMed abstract e.g. You want to get biomedical text training data for named-entity recognition tasks where you need the full-text and the corresponding annotations/labels. Identify key genes related to a certain disease Want to perform a literature review to search for important genes related to breast cancer Rank genes by number of publications Retrieve abstracts from highest published gene Tutorial: Tutorial for Putator Central API in Google colab is available here","title":"PubTator Central API"},{"location":"pubtator-central-api/#pubtator-central-ptc-api","text":"","title":"PubTator Central (PTC) API"},{"location":"pubtator-central-api/#explored-by","text":"CHEN, JESSICA , DODSON, JACK PATRICK , FLYNN-CARROLL, ALEXANDER OWEN - (Bioinformatics 201, Winter-2022, UCLA)","title":"Explored by:"},{"location":"pubtator-central-api/#description","text":"PTC is a Web application that gives automatic annotations of biomedical concepts (e.g., mutations, genes, diseases, drugs, diseases) extracted from PMC articles and PubMed abstracts. PTC can be accessed at National Library of Medicine website and instructions and examples for usage can be located at API document site .","title":"Description:"},{"location":"pubtator-central-api/#use-cases","text":"Retrieve all annotations for each PubMed abstract e.g. You want to get biomedical text training data for named-entity recognition tasks where you need the full-text and the corresponding annotations/labels. Identify key genes related to a certain disease Want to perform a literature review to search for important genes related to breast cancer Rank genes by number of publications Retrieve abstracts from highest published gene","title":"Use cases:"},{"location":"pubtator-central-api/#tutorial","text":"Tutorial for Putator Central API in Google colab is available here","title":"Tutorial:"},{"location":"pybio-mart/","text":"PyBio-Mart API Explored by: HUANG, ELAINE , XUE, ALBERT , Wei, Angela - (Bioinfo 201 - Winter 2022) Description: PyBiomart allows users to easily query biomart databases (which are publically available biological data repositories, such as Ensembl databases) using Python. PyBiomart allows users to define a flexible range of queries, such as fetching gene lengths and alternate gene names. Use cases: RFetch gene start and end positions: Oftentimes, bioinformaticians are interested in the length of a gene. This can be useful to check whether length of a gene is biasing a given analysis. Other times, it is of interest to find a set of length-matched genes to act as a control set in various analyses. We can query the Ensembl databases by specifying that we are interested in the attributes of gene start/end position, as well as transcript length. Convert gene names to different ID formats: One of the idosyncracities of bioinformatics research are the compendium of identifiers that can be assigned to a single given gene. For example, each gene has an Ensembl gene ID (in the format ENSG). While Ensembl gene IDs are unique and do not change even if the gene is updated, they are not very informative to the human eye--that is, we are more likely to remember what the FOXP2 gene does, but not very likely to know that its Ensembl gene ID is ENSG00000128573. In summary, it is helpful to use different types of gene IDs in different scenarios. We can also use pybiomart to get alternative gene IDs. Tutorial: Tutorial on PyBio Mart in Google Colab is available here","title":"PyBio Mart"},{"location":"pybio-mart/#pybio-mart-api","text":"","title":"PyBio-Mart API"},{"location":"pybio-mart/#explored-by","text":"HUANG, ELAINE , XUE, ALBERT , Wei, Angela - (Bioinfo 201 - Winter 2022)","title":"Explored by:"},{"location":"pybio-mart/#description","text":"PyBiomart allows users to easily query biomart databases (which are publically available biological data repositories, such as Ensembl databases) using Python. PyBiomart allows users to define a flexible range of queries, such as fetching gene lengths and alternate gene names.","title":"Description:"},{"location":"pybio-mart/#use-cases","text":"RFetch gene start and end positions: Oftentimes, bioinformaticians are interested in the length of a gene. This can be useful to check whether length of a gene is biasing a given analysis. Other times, it is of interest to find a set of length-matched genes to act as a control set in various analyses. We can query the Ensembl databases by specifying that we are interested in the attributes of gene start/end position, as well as transcript length. Convert gene names to different ID formats: One of the idosyncracities of bioinformatics research are the compendium of identifiers that can be assigned to a single given gene. For example, each gene has an Ensembl gene ID (in the format ENSG). While Ensembl gene IDs are unique and do not change even if the gene is updated, they are not very informative to the human eye--that is, we are more likely to remember what the FOXP2 gene does, but not very likely to know that its Ensembl gene ID is ENSG00000128573. In summary, it is helpful to use different types of gene IDs in different scenarios. We can also use pybiomart to get alternative gene IDs.","title":"Use cases:"},{"location":"pybio-mart/#tutorial","text":"Tutorial on PyBio Mart in Google Colab is available here","title":"Tutorial:"},{"location":"scanty/","text":"Scanpy API Explored by: HUANG, HELEN , MATTHEWS, JAMIE EMOTO , PERRIE, JONATHAN VI - (Bioinformatics 201, Winter-2022, UCLA) Description: Scanpy is a general purpose API for various components of the single-cell analysis pipeline; these include: Filtering Low-dimensional Embeddings Clustering Marker gene identification Plotting It can be accessed via the website documentation , and the original paper can be found on Genome Biology at this link . Tutorial: we created a simple tutorial covering some of these functions for a scRNA-seq dataset, which can be accessed at this link . The tutorial has the following structure: Load data Filter t-SNE vs UMAP computation and plotting Cluster into cell types and plotting Identify genes important for discriminating into groups Use cases: we present two cases centered around analyzing rare cell types. Task: Given a scRNA-seq data set with rare cell types, identify the marker genes Background: To better understand rare cell types, we can identify genes that are distinct in their gene expression profile Goal: Identify marker genes for rare cell types Method: API pipeline with some downsampling to balance class sizes Outcome: Marker genes for rare cell types Task: Given a scRNA-seq data set with rare cell types, construct a trajectory mapping the relationships between all cell types Background: To better understand rare cell types, we can look at their ontological frame with respect to other cell types mapped in some embedding space Goal: Append rare cell types to lineage tree of more common cell types Method: API pipeline with a separate projection of rare cell types to embedding after initial trajectory construction Outcome: Cell type trajectory","title":"Scanpy"},{"location":"scanty/#scanpy-api","text":"","title":"Scanpy API"},{"location":"scanty/#explored-by","text":"HUANG, HELEN , MATTHEWS, JAMIE EMOTO , PERRIE, JONATHAN VI - (Bioinformatics 201, Winter-2022, UCLA)","title":"Explored by:"},{"location":"scanty/#description","text":"Scanpy is a general purpose API for various components of the single-cell analysis pipeline; these include: Filtering Low-dimensional Embeddings Clustering Marker gene identification Plotting It can be accessed via the website documentation , and the original paper can be found on Genome Biology at this link .","title":"Description:"},{"location":"scanty/#tutorial","text":"we created a simple tutorial covering some of these functions for a scRNA-seq dataset, which can be accessed at this link . The tutorial has the following structure: Load data Filter t-SNE vs UMAP computation and plotting Cluster into cell types and plotting Identify genes important for discriminating into groups","title":"Tutorial:"},{"location":"scanty/#use-cases","text":"we present two cases centered around analyzing rare cell types. Task: Given a scRNA-seq data set with rare cell types, identify the marker genes Background: To better understand rare cell types, we can identify genes that are distinct in their gene expression profile Goal: Identify marker genes for rare cell types Method: API pipeline with some downsampling to balance class sizes Outcome: Marker genes for rare cell types Task: Given a scRNA-seq data set with rare cell types, construct a trajectory mapping the relationships between all cell types Background: To better understand rare cell types, we can look at their ontological frame with respect to other cell types mapped in some embedding space Goal: Append rare cell types to lineage tree of more common cell types Method: API pipeline with a separate projection of rare cell types to embedding after initial trajectory construction Outcome: Cell type trajectory","title":"Use cases:"},{"location":"ucsc-genome-browser/","text":"UCSC Genome Browser API Explored by: HU, RAN , NGO, KATHIE J , WANG, YE - (Bioinformatics 201, Winter-2022, UCLA) Description: UCSC Genome Browser is an interactive website hosted by the University of California, Santa Cruz (UCSC). It provides biomedical researchers with genome sequence and annotation data from major model organisms include human, mouse, fruit fly e.g. Online graphical viewer can be accessed at genome.uscs.edu , the usage of API are detailed in this link Use cases: Extract the nucleotide sequence from human genome according to its genomic coordinates Extract genes (annotations) from given regions of the human genome Extract expression of transcript variants at given regions of the human genome Extract SNPs (Single Nucleotide Polymorphisms) from given regions of the human genome Tutorial: Tutorial for USCS Genome Browser in Google Colab is available here","title":"USCS Genome Browser"},{"location":"ucsc-genome-browser/#ucsc-genome-browser-api","text":"","title":"UCSC Genome Browser API"},{"location":"ucsc-genome-browser/#explored-by","text":"HU, RAN , NGO, KATHIE J , WANG, YE - (Bioinformatics 201, Winter-2022, UCLA)","title":"Explored by:"},{"location":"ucsc-genome-browser/#description","text":"UCSC Genome Browser is an interactive website hosted by the University of California, Santa Cruz (UCSC). It provides biomedical researchers with genome sequence and annotation data from major model organisms include human, mouse, fruit fly e.g. Online graphical viewer can be accessed at genome.uscs.edu , the usage of API are detailed in this link","title":"Description:"},{"location":"ucsc-genome-browser/#use-cases","text":"Extract the nucleotide sequence from human genome according to its genomic coordinates Extract genes (annotations) from given regions of the human genome Extract expression of transcript variants at given regions of the human genome Extract SNPs (Single Nucleotide Polymorphisms) from given regions of the human genome","title":"Use cases:"},{"location":"ucsc-genome-browser/#tutorial","text":"Tutorial for USCS Genome Browser in Google Colab is available here","title":"Tutorial:"},{"location":"uniprot/","text":"UniProt Web API A sample Provided by Pinglab UCLA Description: UniProt is a protein knowledge base which provides information on proteins, including their sequences, their biological function, and other properties, curated from their references in the biomedical literature. Uniprot can be accessed directly at uniprot.org and instructions to the API are detailed at online API document . Use cases: Retrieve individual or batch entries of proteins of interest (e.g., the text representation of a protein entry, parsable by a custom script, given at a text file Convert database identifiers (e.g., If a collaborator gave you protein IDs from another knowledgebase such as STRING DB but your software uses UniProt IDs. You want your software to convert these to UniProt so you can run your analysis properly. You can use UniProt\u2019s web API described here to convert these IDs.) Tutorial: Tutorial on Uniprot API in Google Colab is available here","title":"Uniprot API"},{"location":"uniprot/#uniprot-web-api","text":"A sample Provided by Pinglab UCLA","title":"UniProt Web API"},{"location":"uniprot/#description","text":"UniProt is a protein knowledge base which provides information on proteins, including their sequences, their biological function, and other properties, curated from their references in the biomedical literature. Uniprot can be accessed directly at uniprot.org and instructions to the API are detailed at online API document .","title":"Description:"},{"location":"uniprot/#use-cases","text":"Retrieve individual or batch entries of proteins of interest (e.g., the text representation of a protein entry, parsable by a custom script, given at a text file Convert database identifiers (e.g., If a collaborator gave you protein IDs from another knowledgebase such as STRING DB but your software uses UniProt IDs. You want your software to convert these to UniProt so you can run your analysis properly. You can use UniProt\u2019s web API described here to convert these IDs.)","title":"Use cases:"},{"location":"uniprot/#tutorial","text":"Tutorial on Uniprot API in Google Colab is available here","title":"Tutorial:"},{"location":"web-gestalt-web-api/","text":"WebGestalt Web API Explored by: HUANG, HUILING , FU, JINGYUAN - (Bioinformatics 201, Winter-2022, UCLA) Description: WebGestalt is a gene set enrichment analysis tool which helps users interpret lists of interesting genes or proteins from high-throughput experiment results in various biological contexts. The tool supports three complementary methods for enrichment analysis, including : Over-Representation Analysis (ORA) Gene Set Enrichment Analysis (GSEA) Network Topology-based Analysis (NTA) Various functional databases and reference gene sets are available, and users can upload their own choice of reference set. WebGestalt can be accessed directly at webgestalt.org , and the user manual of the API is detailed at WebGestalt 2019 Manual . Use cases: Retrieve gene set data files of interest (e.g., retrieve the human gene set files in KEGG database for pathway analysis) Retrieve gene set enrichment analysis results (e.g., perform gene set enrichment analysis of a specific list of genes with specified organism, enrichment method, FDR method, enrichment database category, enrichment database name, statistically significant method, significant value, maximum number of genes for a category, ID type of the gene list and reference set) Tutorial: Tutorial for Web Gestalt Web API in Google Colab is available here","title":"WebGesalt Web API"},{"location":"web-gestalt-web-api/#webgestalt-web-api","text":"","title":"WebGestalt Web API"},{"location":"web-gestalt-web-api/#explored-by","text":"HUANG, HUILING , FU, JINGYUAN - (Bioinformatics 201, Winter-2022, UCLA)","title":"Explored by:"},{"location":"web-gestalt-web-api/#description","text":"WebGestalt is a gene set enrichment analysis tool which helps users interpret lists of interesting genes or proteins from high-throughput experiment results in various biological contexts. The tool supports three complementary methods for enrichment analysis, including : Over-Representation Analysis (ORA) Gene Set Enrichment Analysis (GSEA) Network Topology-based Analysis (NTA) Various functional databases and reference gene sets are available, and users can upload their own choice of reference set. WebGestalt can be accessed directly at webgestalt.org , and the user manual of the API is detailed at WebGestalt 2019 Manual .","title":"Description:"},{"location":"web-gestalt-web-api/#use-cases","text":"Retrieve gene set data files of interest (e.g., retrieve the human gene set files in KEGG database for pathway analysis) Retrieve gene set enrichment analysis results (e.g., perform gene set enrichment analysis of a specific list of genes with specified organism, enrichment method, FDR method, enrichment database category, enrichment database name, statistically significant method, significant value, maximum number of genes for a category, ID type of the gene list and reference set)","title":"Use cases:"},{"location":"web-gestalt-web-api/#tutorial","text":"Tutorial for Web Gestalt Web API in Google Colab is available here","title":"Tutorial:"}]}